{"version":3,"sources":["images/cryptocurrency.png","components/navbar/index.js","service/cryptoApi.js","components/loader/index.js","pages/Homepage.js","pages/Exchanges.js","pages/Cryptocurrencies.js","components/chart/lineChart.js","pages/CryptoDetails.js","service/newsApi.js","pages/News.js","App.js","app/store.js","index.js"],"names":["Navbar","useState","screenSize","setScreenSize","activeMenu","setActiveMenu","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getExchanges","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Loader","Typography","Homepage","data","isFetching","error","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","limited","Text","Panel","Collapse","Exchanges","exchangesList","exchanges","map","exchange","i","showArrow","header","rank","iconUrl","name","volume","numberOfMarkets","marketShare","id","dangerouslySetInnerHTML","__html","description","Cryptocurrencies","cryptoList","cryptos","setCryptos","searchTerm","setSearchTerm","coins","filterData","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","gutter","item","xs","sm","lg","extra","alt","hoverable","price","marketCap","change","ChartJS","register","LineElement","PointElement","LinearScale","CategoryScale","Tooltip","Legend","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","responsive","scales","yAxes","ticks","beginAtZero","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","console","log","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","idx","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","News","setNewsCategory","cryptoNews","cryptoNewsList","setCryptoNewsList","showSearch","allowClear","optionFilterProp","filterOption","input","option","children","charAt","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","component","color","textAlign","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.451a2d20.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import { useState, useEffect } from 'react'\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons'\r\n\r\nimport icon from '../../images/cryptocurrency.png'\r\n\r\nfunction Navbar() {\r\n\r\n    const [screenSize, setScreenSize] = useState()\r\n    const [activeMenu, setActiveMenu] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setScreenSize(window.innerWidth)\r\n            // setActiveMenu(true)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        handleResize()\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (screenSize < 768) {\r\n            setActiveMenu(false)\r\n        } else {\r\n            setActiveMenu(true)\r\n        }\r\n    }, [screenSize])\r\n\r\n    return (\r\n        <div className='nav-container'>\r\n            <div className='logo-container'>\r\n                <Avatar src={icon} size='large' />\r\n                <Typography.Title level={2} className='logo'>\r\n                    <Link to='/'>Crypto</Link>\r\n                </Typography.Title>\r\n                <Button className='menu-control-container' onClick={() => setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined />\r\n                </Button>\r\n            </div>\r\n\r\n            {activeMenu &&\r\n                <Menu theme='dark'>\r\n                    <Menu.Item icon={<HomeOutlined />} key={'Home'}>\r\n                        <Link to='/'>Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined />} key={'Cryptocurrencies'}>\r\n                        <Link to='/Cryptocurrencies'>Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined />} key={'Exchanges'}>\r\n                        <Link to='/Exchanges'>Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined />} key={'News'}>\r\n                        <Link to='/News'>News</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\r\n    'x-rapidapi-host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\r\n}\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`)\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`)\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest('/exchanges'),\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`),\r\n        }),\r\n    })\r\n})\r\n\r\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery } = cryptoApi","import { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n    <div className=\"loader\">\r\n        <Spin />\r\n    </div>\r\n);\r\n\r\nexport default Loader;","import React from 'react'\r\nimport { Typography, Row, Col, Statistic } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport millify from 'millify'\r\nimport { useGetCryptosQuery } from '../service/cryptoApi';\r\nimport { Cryptocurrencies, News } from '.';\r\nimport Loader from '../components/loader'\r\n\r\nconst { Title } = Typography\r\n\r\nfunction Homepage() {\r\n\r\n    const { data, error, isFetching } = useGetCryptosQuery(10)\r\n    const globalStats = data?.data?.stats\r\n\r\n    // console.log(data)\r\n\r\n    if (isFetching) return <Loader />\r\n\r\n    return (\r\n        <div>\r\n            <Title level={2} className='heading'>Global Crypto Stats</Title>\r\n\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Statistic title='Total Cryptocurrencies' value={globalStats.total} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title='Total Exchanges' value={millify(globalStats.totalExchanges)} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title='Total Market Cap' value={millify(globalStats.totalMarketCap)} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title='Total 24h Volume' value={millify(globalStats.total24hVolume)} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title='Total Markets' value={millify(globalStats.totalMarkets)} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <div className='home-heading-container'>\r\n                <Title level={2} className='home-title'>Top 10 Cryptocurrencies in the world</Title>\r\n                <Title level={3} className='show-more'><Link to='/cryptocurrencies'>show more</Link></Title>\r\n            </div>\r\n            <Cryptocurrencies limited />\r\n\r\n            <div className='home-heading-container'>\r\n                <Title level={2} className='home-title'>Latest Crypto News</Title>\r\n                <Title level={3} className='show-more'><Link to='/news'>show more</Link></Title>\r\n            </div>\r\n            <News limited />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\n\r\nimport { useGetExchangesQuery } from '../service/cryptoApi';\r\nimport Loader from '../components/loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n    const { data, isFetching } = useGetExchangesQuery();\r\n    const exchangesList = data?.data?.exchanges;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={6}>Exchanges</Col>\r\n                <Col span={6}>24h Trade Volume</Col>\r\n                <Col span={6}>Markets</Col>\r\n                <Col span={6}>Change</Col>\r\n            </Row>\r\n            <Row>\r\n                {exchangesList.map((exchange, i) => (\r\n                    <Col span={24} key={i}>\r\n                        <Collapse>\r\n                            <Panel\r\n                                key={exchange.id}\r\n                                showArrow={false}\r\n                                header={(\r\n                                    <Row key={exchange.id}>\r\n                                        <Col span={6}>\r\n                                            <Text><strong>{exchange.rank}.</strong></Text>\r\n                                            <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                                            <Text><strong>{exchange.name}</strong></Text>\r\n                                        </Col>\r\n                                        <Col span={6}>${millify(exchange.volume)}</Col>\r\n                                        <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                                        <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                                    </Row>\r\n                                )}\r\n                            >\r\n                                <div dangerouslySetInnerHTML={{ __html: exchange.description }} />\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Exchanges;","import { useState, useEffect } from 'react'\r\nimport millify from 'millify'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Row, Col, Input } from 'antd'\r\n\r\nimport { useGetCryptosQuery } from '../service/cryptoApi';\r\nimport Loader from '../components/loader'\r\n\r\nfunction Cryptocurrencies({ limited }) {\r\n\r\n    const count = limited ? 10 : 100\r\n    const { data: cryptoList, isFetching } = useGetCryptosQuery(count)\r\n    const [cryptos, setCryptos] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    useEffect(() => {\r\n\r\n        setCryptos(cryptoList?.data?.coins)\r\n\r\n        const filterData = cryptoList?.data?.coins.filter(coin => coin.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n\r\n        setCryptos(filterData)\r\n\r\n    }, [cryptoList, searchTerm])\r\n\r\n    if (isFetching) return <Loader />\r\n\r\n    return (\r\n        <>\r\n            {!limited &&\r\n                <div className='search-crypto'>\r\n                    <Input placeholder='Search Cryptocurrency' onChange={e => setSearchTerm(e.target.value)} />\r\n                </div>\r\n            }\r\n\r\n            <Row gutter={[32, 32]} className='crypto-card-container'>\r\n                {\r\n                    cryptos?.map((item) => (\r\n                        <Col xs={24} sm={12} lg={6} className='crypto-card' key={item.id}>\r\n                            <Link to={'/crypto/' + item.id}>\r\n                                <Card\r\n                                    title={item.rank + '. ' + item.name}\r\n                                    extra={<img src={item.iconUrl} alt='crypto' className='crypto-image' />}\r\n                                    hoverable\r\n                                >\r\n                                    <p>Price:{millify(item.price)}</p>\r\n                                    <p>Price:{millify(item.marketCap)}</p>\r\n                                    <p>Price:{millify(item.change)}</p>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                    ))\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, Title, CategoryScale, Tooltip, Legend } from 'chart.js';\r\nimport { Col, Row, Typography } from 'antd'\r\n\r\nChartJS.register(LineElement, PointElement, LinearScale, Title, CategoryScale, Tooltip, Legend);\r\n// const { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n        coinPrice.push(coinHistory?.data?.history[i].price);\r\n    }\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n        coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price In USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0071bd',\r\n                borderColor: '#0071bd',\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        responsive: true,\r\n        scales: {\r\n            yAxes: {\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                },\r\n            },\r\n\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className='chart-header'>\r\n                <Typography.Title level={2} className='chart-title'>{coinName} Price Chart</Typography.Title>\r\n                <Col className='price-container'>\r\n                    <Typography.Title level={5} className='price-change'>{coinHistory?.data?.change}%</Typography.Title>\r\n                    <Typography.Title level={5} className='current-price'>Current {coinName} Price: $ {currentPrice}</Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import React, { useState } from 'react';\r\n// import HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport {\r\n    MoneyCollectOutlined,\r\n    DollarCircleOutlined,\r\n    FundOutlined,\r\n    ExclamationCircleOutlined,\r\n    StopOutlined,\r\n    TrophyOutlined,\r\n    CheckOutlined,\r\n    NumberOutlined,\r\n    ThunderboltOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport Loader from '../components/loader'\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../service/cryptoApi';\r\nimport LineChart from '../components/chart/lineChart'\r\n\r\nconst { Text, Title } = Typography\r\nconst { Option } = Select\r\n\r\nfunction CryptoDetails() {\r\n\r\n    const { coinId } = useParams()\r\n    const [timePeriod, setTimePeriod] = useState('7d')\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId)\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timePeriod })\r\n    const cryptoDetails = data?.data?.coin\r\n\r\n    console.log('detail:', data)\r\n    console.log('history:', coinHistory)\r\n    console.log(timePeriod)\r\n\r\n    if (isFetching) return <Loader />\r\n\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n\r\n    const genericStats = [\r\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n        { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n    return (\r\n        <Col className='coin-detail-container'>\r\n            <Col className='coin-heading-container'>\r\n                <Title level={2} className='coin-name'>\r\n                    {cryptoDetails.name}({cryptoDetails.slug}) Price\r\n                </Title>\r\n                <p>{cryptoDetails.name}live price in US dollars. View value statistics, market cap and supply</p>\r\n            </Col>\r\n            <Select\r\n                defaultValue='7d'\r\n                className='select-timeperiod'\r\n                placeholder='Select Time Period'\r\n                onChange={value => setTimePeriod(value)}\r\n            >\r\n                {time.map(date => <Option key={date}>{date}</Option>)}\r\n            </Select>\r\n\r\n            <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n\r\n            <Col className='stats-container'>\r\n\r\n                <Col className='coin-value-statistics'>\r\n                    <Col className='coin-value-statistics-heading'>\r\n                        <Title level={3} className='coin-details-heading'>\r\n                            {cryptoDetails.name} Value Statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of {cryptoDetails.name}\r\n                        </p>\r\n                    </Col>\r\n                    {\r\n                        stats.map(({ icon, title, value }) => (\r\n                            <Col className='coin-stats' key={title}>\r\n                                <Col className='coin-stats-name'>\r\n                                    <Text>{icon}</Text>\r\n                                    <Text>{title}</Text>\r\n                                </Col>\r\n                                <Text className='stats'>{value}</Text>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n                </Col>\r\n\r\n                <Col className='other-stats-info'>\r\n                    <Col className='coin-value-statistics-heading'>\r\n                        <Title level={3} className='coin-details-heading'>\r\n                            Other Statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of all cryptocurrencies\r\n                        </p>\r\n                    </Col>\r\n                    {\r\n                        genericStats.map(({ icon, title, value }) => (\r\n                            <Col className='coin-stats' key={title}>\r\n                                <Col className='coin-stats-name'>\r\n                                    <Text>{icon}</Text>\r\n                                    <Text>{title}</Text>\r\n                                </Col>\r\n                                <Text className='stats'>{value}</Text>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n                </Col>\r\n\r\n            </Col>\r\n            <Col className='coin-desc-link'>\r\n                <Row className='coin-desc'>\r\n                    <Title level={3} className='coin-details-heading'>\r\n                        What is {cryptoDetails.name}\r\n                        <div dangerouslySetInnerHTML={{ __html: cryptoDetails.description }} />\r\n                        {/* {HTMLReactParser(cryptoDetails.description)} */}\r\n                    </Title>\r\n                </Row>\r\n                <Col className='coin-links'>\r\n                    <Title level={3} className='coin-details-heading'>\r\n                        {cryptoDetails.name} Links\r\n                    </Title>\r\n                    {\r\n                        cryptoDetails.links.map((link, idx) => (\r\n                            <Row className='coin-link' key={idx}>\r\n                                <Title level={5} className='link-name'>\r\n                                    {link.type}\r\n                                </Title>\r\n                                <a href={link.url} target='_blank' rel='noreferrer'>\r\n                                    {link.name}\r\n                                </a>\r\n                            </Row>\r\n                        ))\r\n                    }\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\r\n    'x-rapidapi-host': process.env.REACT_APP_NEWS_RAPIDAPI_HOST,\r\n}\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders })\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_NEWS_API_URL }),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\r\n        })\r\n    })\r\n})\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi","import { useState, useEffect } from 'react'\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd'\r\nimport moment from 'moment'\r\nimport { useGetCryptoNewsQuery } from '../service/newsApi'\r\nimport { useGetCryptosQuery } from '../service/cryptoApi';\r\nimport Loader from '../components/loader'\r\n\r\nconst { Text, Title } = Typography\r\nconst { Option } = Select\r\n\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nfunction News({ limited }) {\r\n\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\r\n\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({\r\n        newsCategory,\r\n        count: limited ? 6 : 20\r\n    })\r\n\r\n    const { data } = useGetCryptosQuery(50)\r\n\r\n    const [cryptoNewsList, setCryptoNewsList] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        setCryptoNewsList(cryptoNews?.value)\r\n\r\n    }, [cryptoNews])\r\n\r\n    if (!cryptoNews) return <Loader />\r\n\r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n            {\r\n                !limited && (\r\n                    <Col span={24}>\r\n                        <Select\r\n                            showSearch\r\n                            allowClear\r\n                            className='select-news'\r\n                            placeholder='Select a crypto'\r\n                            optionFilterProp='children'\r\n                            onChange={value => setNewsCategory(value)}\r\n                            filterOption={(input, option) => option.children.toLowerCase().charAt(input.toLowerCase()) >= 0}\r\n                        >\r\n                            <Option value='Cryptocurrency'>Cryptocurrency</Option>\r\n                            {data?.data?.coins.map(coin => <Option value={coin.name} key={coin.id}>{coin.name}</Option>)}\r\n                        </Select>\r\n                    </Col>\r\n                )\r\n            }\r\n\r\n\r\n            {\r\n                cryptoNewsList?.map((news, i) => (\r\n                    <Col xs={24} sm={12} lg={8} key={i}>\r\n                        <Card hoverable className='news-card'>\r\n                            <a href={news.url} target='_blank' rel='noreferrer'>\r\n                                <div className='news-image-container'>\r\n                                    <Title className='news-title' level={4}>{news.name}</Title>\r\n                                    <img style={{ maxWidth: '200px', maxHeight: '100px' }} src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\" />\r\n                                </div>\r\n                                <p>\r\n                                    {\r\n                                        news.description > 100\r\n                                            ? `${news.description.substring(0, 100)}...`\r\n                                            : news.description\r\n                                    }\r\n                                </p>\r\n                                <div className='provider-container'>\r\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl} alt='news' />\r\n                                    <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                                </div>\r\n                            </a>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            }\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import './App.css';\nimport React from 'react';\nimport { HashRouter, Route, Switch, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport { Navbar } from './components'\nimport { Homepage, Exchanges, Cryptocurrencies, CryptoDetails, News } from './pages'\n\nfunction App() {\n    return (\n        <HashRouter>\n            <div className=\"app\">\n                <div className='navbar'>\n                    <Navbar />\n                </div>\n                <div className='main'>\n                    <Layout>\n                        <div className=\"routes\">\n                            <Switch>\n                                <Route exact path='/' component={Homepage}></Route>\n                                <Route exact path='/exchanges' component={Exchanges}></Route>\n                                <Route exact path='/cryptocurrencies' component={Cryptocurrencies}></Route>\n                                <Route exact path='/crypto/:coinId' component={CryptoDetails}></Route>\n                                <Route exact path='/news' component={News}></Route>\n                            </Switch>\n                        </div>\n                    </Layout>\n\n                    <div className='footer'>\n                        <Typography.Title level={5} style={{ color: '#ccc', textAlign: 'center' }}>\n                            Crypto\n                            <br />\n                            All rights reserved\n                        </Typography.Title>\n                        <Space>\n                            <Link to='/'>Home</Link>\n                            <Link to='/exchanges'>Exchanges</Link>\n                            <Link to='/news'>News</Link>\n                        </Space>\n                    </div>\n                </div>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { cryptoApi } from '../service/cryptoApi'\r\nimport { cryptoNewsApi } from '../service/newsApi'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware().concat(\r\n            cryptoApi.middleware,\r\n            cryptoNewsApi.middleware\r\n        )\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './app/store'\nimport { Provider } from 'react-redux'\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}